version: '3.8'

services:
  # front:
  #   build:
  #     context: ./front
  #   volumes:
  #     - ./front:/app
  #   ports:
  #     - "${FRONTEND_PORT}:${FRONTEND_PORT}"
  #   networks:
  #     - app-network
  #   environment:
  #     - NODE_ENV=${NODE_ENV}
  #     - REACT_APP_API_URL=${REACT_APP_API_URL}          
  #     - FLASK_ENV: production
  #     - FLASK_APP: run.py
  #     - DATABASE_URL: postgresql://abdelnasser:greatness@db:5432/mydatabase
      
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgresql://abdelnasser:greatness@db:5432/mydatabase
    depends_on:
      - db

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data      
      - ./mydatabase.dump:/docker-entrypoint-initdb.d/mydatabase.dump
    # entrypoint: sh -c "python scripts/send_timesheet_data.py && python run.py"


networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
